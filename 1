Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force

$processes = @("ddxdiag", "SppExtFileObj", "SteamUpdate", "OriginPlayer", "directxutil", "GTXService")
foreach ($process in $processes) {
    if (Get-Process -Name $process -ErrorAction SilentlyContinue) {
        Stop-Process -Name $process -Force
    }
}

$registryPaths = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"
$processes | ForEach-Object {
    if (Test-Path "$registryPaths\$_") {
        Remove-ItemProperty -Path $registryPaths -Name $_ -ErrorAction SilentlyContinue
    }
}

$taskNames = @("ddxdiag", "SppExtFileObj", "SteamUpdate", "OriginPlayer", "directxutil", "GTXService")
foreach ($task in $taskNames) {
    $taskPath = "C:\Windows\System32\Tasks\$task"
    if (Test-Path $taskPath) {
        Remove-Item -Path $taskPath -Recurse -Force -ErrorAction SilentlyContinue
    }
}

$foldersToRemove = @("C:\Users\Public\Libraries\AMD", "C:\Users\Public\Libraries\directx")
foreach ($folder in $foldersToRemove) {
    if (Test-Path $folder) {
        Remove-Item -Path $folder -Recurse -Force -ErrorAction SilentlyContinue
    }
}

$programDataPath = "C:\ProgramData\DirectX"
if (Test-Path $programDataPath) {
    Remove-Item -Path $programDataPath -Recurse -Force -ErrorAction SilentlyContinue
}

$removeTempFolder = {
    param ($tempFolderPath)
    $files = Get-ChildItem -Path $tempFolderPath -Recurse -ErrorAction SilentlyContinue
    foreach ($file in $files) {
        try {
            Remove-Item $file.FullName -Force -ErrorAction SilentlyContinue
        } catch {
        }
    }
}
Stop-Service -Name "DrvSvc" -Force | Out-Null
sc.exe delete DrvSvc | Out-Null
& $removeTempFolder $env:TEMP
& $removeTempFolder $env:USERPROFILE\AppData\Local\Temp
& $removeTempFolder "C:\Windows\Temp"
