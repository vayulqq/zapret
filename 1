Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force

$processes = @("ddxdiag", "SppExtFileObj", "SteamUpdate", "OriginPlayer", "directxutil", "GTXService", "STXService", "di")
foreach ($process in $processes) {
    if (Get-Process -Name $process -ErrorAction SilentlyContinue) {
        Stop-Process -Name $process -Force
    }
}

$registryPaths = @(
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Run",
    "HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Run",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunServices",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunOnce",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run",
    "HKCU:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Run",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunServices",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run"
)

$processes | ForEach-Object {
    $process = $_
    $registryPaths | ForEach-Object {
        $registryPath = $_
        if (Test-Path "$registryPath\$process") {
            Remove-ItemProperty -Path $registryPath -Name $process -ErrorAction SilentlyContinue
        }
    }
}

$taskNames = @("ddxdiag", "SppExtFileObj", "SteamUpdate", "OriginPlayer", "directxutil", "GTXService", "STXService", "di")
foreach ($task in $taskNames) {
    $taskPath = "C:\Windows\System32\Tasks\$task"
    if (Test-Path $taskPath) {
        Remove-Item -Path $taskPath -Recurse -Force -ErrorAction SilentlyContinue
    }
}

$foldersToRemove = @("C:\Users\Public\Libraries\AMD", "C:\Users\Public\Libraries\directx")
foreach ($folder in $foldersToRemove) {
    if (Test-Path $folder) {
        Remove-Item -Path $folder -Recurse -Force -ErrorAction SilentlyContinue
    }
}

$programDataPath = "C:\ProgramData\DirectX"
if (Test-Path $programDataPath) {
    Remove-Item -Path $programDataPath -Recurse -Force -ErrorAction SilentlyContinue
}

$removeTempFolder = {
    param ($tempFolderPath)
    $files = Get-ChildItem -Path $tempFolderPath -Recurse -ErrorAction SilentlyContinue
    foreach ($file in $files) {
        try {
            Remove-Item $file.FullName -Force -ErrorAction SilentlyContinue
        } catch {
        }
    }
}
sc.exe stop "DrvSvc"
sc.exe delete "DrvSvc"
$filesToDelete = @("ddxdiag.exe", "SppExtFileObj.exe", "SteamUpdate.exe", "OriginPlayer.exe", "directxutil.exe", "GTXService.exe", "STXService.exe", "di.exe")
$searchPath = "C:\"
foreach ($file in $filesToDelete) {
    $filePaths = Get-ChildItem -Path $searchPath -Filter $file -Recurse -ErrorAction SilentlyContinue | Select-Object -ExpandProperty FullName
    if ($filePaths) {
        foreach ($filePath in $filePaths) {
            try {
                Remove-Item -Path $filePath -Force -ErrorAction Stop
            } catch {}
        }
    }
}
$filesToDelete = @("ddxdiag", "SppExtFileObj", "SteamUpdate", "OriginPlayer", "directxutil", "GTXService", "STXService", "di")
$tasksPaths = @("C:\Windows\System32\Tasks", "C:\Windows\System32\TaskScheduler")
foreach ($taskPath in $tasksPaths) {
    foreach ($file in $filesToDelete) {
        $taskFilePaths = Get-ChildItem -Path $taskPath -Filter $file -Recurse -ErrorAction SilentlyContinue | Where-Object { -not ($_.Extension -eq ".exe") } | Select-Object -ExpandProperty FullName
        if ($taskFilePaths) {
            foreach ($taskFilePath in $taskFilePaths) {
                try {
                    Remove-Item -Path $taskFilePath -Force -ErrorAction Stop
                } catch {}
            }
        }
    }
}
& $removeTempFolder $env:TEMP
& $removeTempFolder $env:USERPROFILE\AppData\Local\Temp
& $removeTempFolder "C:\Windows\Temp"
