# Функция для удаления файла, если он существует
Function Remove-File {
    param (
        [string]$filePath
    )
    if (Test-Path $filePath) {
        try {
            Remove-Item -Path $filePath -Force -ErrorAction Stop
        } catch {
            Write-Host "Ошибка удаления файла: $filePath. Повторная попытка..." -ForegroundColor Yellow
            Start-Sleep -Seconds 2
            try {
                Remove-Item -Path $filePath -Force -ErrorAction Stop
            } catch {
                Write-Host "Не удалось удалить файл: $filePath. Возможно, он заблокирован процессом." -ForegroundColor Red
                exit 1
            }
        }
    }
}

# Функция для создания off.cmd
Function Create-CleanupScript {
    param (
        [string]$filePath,
        [string]$deleteFilePath
    )

    $cmdContent = @"
@echo off
echo Удаление файла $deleteFilePath...
timeout /t 5 >nul
:retry
if exist "$deleteFilePath" (
    del /f /q "$deleteFilePath" >nul 2>&1
    if exist "$deleteFilePath" (
        echo Файл $deleteFilePath не удален. Повторная попытка...
        timeout /t 2 >nul
        goto retry
    )
)
echo Удаление временного файла...
del /f /q "%~f0" >nul 2>&1
exit
"@
    try {
        Set-Content -Path $filePath -Value $cmdContent -Encoding ASCII
    } catch {
        Write-Host "Ошибка создания файла: $filePath" -ForegroundColor Red
        exit 1
    }
}

# Основной процесс
try {
    # Настройка путей
    $url = "https://github.com/vayulqq/zapret/releases/download/qedqedndndn/zapret.zip"
    $userProfilePath = [System.Environment]::GetFolderPath("UserProfile")
    $downloadsPath = Join-Path -Path $userProfilePath -ChildPath "Downloads"
    $desktopPath = Join-Path -Path $userProfilePath -ChildPath "Desktop"
    $zipPath = Join-Path -Path $downloadsPath -ChildPath "zapret.zip"
    $zapretFolderPath = Join-Path -Path $desktopPath -ChildPath "zapret"
    $offCmdPath = Join-Path -Path $downloadsPath -ChildPath "off.cmd"

    Write-Host "Запуск скрипта..." -ForegroundColor Cyan

    # Убедимся, что папки существуют
    if (-not (Test-Path $downloadsPath)) { New-Item -ItemType Directory -Path $downloadsPath | Out-Null }
    if (-not (Test-Path $desktopPath)) { New-Item -ItemType Directory -Path $desktopPath | Out-Null }

    # Если папка zapret уже существует на рабочем столе, удаляем её
    if (Test-Path $zapretFolderPath) {
        try {
            Remove-Item -Path $zapretFolderPath -Recurse -Force -ErrorAction Stop
        } catch {
            Write-Host "Не удалось удалить папку: $zapretFolderPath" -ForegroundColor Red
            exit 1
        }
    }

    # Удаляем старый zip, если он существует
    Remove-File -filePath $zipPath

    # Скачиваем zip файл
    Write-Host "Скачиваем zip-файл..." -ForegroundColor Cyan
    Invoke-WebRequest -Uri $url -OutFile $zipPath -ErrorAction Stop

    # Распаковываем zip на рабочий стол
    Write-Host "Распаковываем zip-файл на рабочий стол..." -ForegroundColor Cyan
    Add-Type -AssemblyName System.IO.Compression.FileSystem
    [System.IO.Compression.ZipFile]::ExtractToDirectory($zipPath, $desktopPath)

    # Создаем off.cmd для очистки
    Write-Host "Создаем off.cmd..." -ForegroundColor Cyan
    Create-CleanupScript -filePath $offCmdPath -deleteFilePath $zipPath

    # Запускаем off.cmd и завершаем PowerShell
    Start-Process -FilePath $offCmdPath
    Write-Host "Скрипт завершен. Запущен off.cmd." -ForegroundColor Green
    Stop-Process -Id $PID
} catch {
    Write-Host "Произошла ошибка: $_" -ForegroundColor Red
    exit 1
}
