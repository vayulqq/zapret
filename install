# Устанавливаем путь к рабочему столу
$desktopPath = [System.IO.Path]::Combine($env:USERPROFILE, 'Desktop')
$zapretFolderPathDesktop = [System.IO.Path]::Combine($desktopPath, 'zapret_vayul')

# Путь к лог-файлу
$logFile = [System.IO.Path]::Combine($desktopPath, "zapret_log.txt")

# Функция для записи в лог
function Write-Log {
    param (
        [string]$message
    )
    
    # Если лог-файл не существует, создаем его
    if (-not (Test-Path -Path $logFile)) {
        New-Item -Path $logFile -ItemType File -Force
    }
    
    # Формируем лог-сообщение
    $logMessage = "$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss') - $message"
    
    # Записываем в лог-файл
    Add-Content -Path $logFile -Value $logMessage
    Write-Host $logMessage
}

# Функция для удаления папки
function Remove-Folder {
    param (
        [string]$folderPath
    )

    try {
        # Проверяем, существует ли папка
        if (Test-Path -Path $folderPath) {
            Write-Host "Папка '$folderPath' найдена. Удаляю её..."
            
            # Попытка удаления папки рекурсивно
            Remove-Item -Path $folderPath -Recurse -Force -ErrorAction Stop
            Write-Host "Папка '$folderPath' была успешно удалена."
        } else {
            Write-Host "Папка '$folderPath' не найдена."
        }
    } catch {
        Write-Host "Не удалось удалить папку '$folderPath'. Ошибка: $_"
    }
}

# Попытка удалить папку с рабочего стола
Remove-Folder -folderPath $zapretFolderPathDesktop

# Путь к загрузкам
$defaultDownloadFolder = [System.IO.Path]::Combine([Environment]::GetFolderPath("UserProfile"), "Downloads")
$defaultExtractPath = [System.IO.Path]::Combine([Environment]::GetFolderPath("Desktop"))
$downloadUrl = "https://github.com/vayulqq/zapret/releases/download/zapret/zapret_vayul.zip"
$archiveName = "zapret_vayul.zip"
$zapretFolderName = "zapret_vayul"

# Устанавливаем путь к рабочему столу
$desktopPath = [System.IO.Path]::Combine($env:USERPROFILE, 'Desktop')
$zapretFolderPathDesktop = [System.IO.Path]::Combine($desktopPath, 'zapret_vayul')

# Функция для скачивания файла
function Download-File($url, $destination) {
    try {
        Write-Log "Начинаю скачивание файла с $url."
        Invoke-WebRequest -Uri $url -OutFile $destination -ErrorAction SilentlyContinue
        Write-Log "Скачивание завершено."
    } catch {
        Write-Log "Ошибка при скачивании файла: $_"
    }
}

# Скачивание архива zapret_vayul.zip
$downloadFolder = Read-Host "Введите путь для скачивания архива (по умолчанию: $defaultDownloadFolder):"
if (-not $downloadFolder) {
    $downloadFolder = $defaultDownloadFolder
}

# Проверка, существует ли путь для скачивания
if (-not (Test-Path -Path $downloadFolder)) {
    Write-Log "Путь для скачивания не существует: $downloadFolder. Использую путь по умолчанию."
    $downloadFolder = $defaultDownloadFolder
}

$downloadPath = [System.IO.Path]::Combine($downloadFolder, $archiveName)

# Если архив уже существует, запросим его перезапись
if (Test-Path -Path $downloadPath) {
    $overwrite = Read-Host "Архив уже существует. Хотите его перезаписать? (y/n)"
    if ($overwrite -ne 'y') {
        Write-Log "Скачивание было отменено."
        exit
    }
}

Download-File -url $downloadUrl -destination $downloadPath

# Запрос у пользователя пути для распаковки
$extractPath = Read-Host "Введите путь для распаковки (по умолчанию: $defaultExtractPath):"
if (-not $extractPath) {
    $extractPath = $defaultExtractPath
}

# Проверка, существует ли путь для распаковки
if (-not (Test-Path -Path $extractPath)) {
    Write-Log "Путь для распаковки не существует: $extractPath. Использую путь по умолчанию."
    $extractPath = $defaultExtractPath
}

# Удаление папки zapret_vayul, если она существует на пути распаковки
$zapretFolderPath = [System.IO.Path]::Combine($extractPath, $zapretFolderName)
if (Test-Path -Path $zapretFolderPath) {
    Write-Host "Папка '$zapretFolderName' уже существует в пути '$extractPath'. Удаляю её..."
    try {
        # Удаляем папку рекурсивно с параметром Force
        Remove-Item -Path $zapretFolderPath -Recurse -Force -ErrorAction SilentlyContinue
        Write-Log "Папка '$zapretFolderName' была успешно удалена."
    } catch {
        Write-Host "Не удалось удалить папку '$zapretFolderName'. Ошибка: $_"
    }
} else {
    Write-Log "Папка '$zapretFolderName' не найдена в пути '$extractPath'."
}

# Распаковка архива
function Extract-Archive($zipPath, $extractPath) {
    try {
        Write-Log "Распаковываю архив в $extractPath."
        Expand-Archive -Path $zipPath -DestinationPath $extractPath -ErrorAction SilentlyContinue
        Write-Log "Распаковка завершена."
    } catch {
        Write-Log "Ошибка при распаковке архива: $_"
    }
}

Extract-Archive -zipPath $downloadPath -extractPath $extractPath

# Удаление архива после распаковки
Remove-Item -Path $downloadPath -ErrorAction SilentlyContinue
Write-Log "Архив $archiveName был удален после распаковки."

# Удаление папки zapret_vayul с рабочего стола, если она существует
Remove-Folder -folderPath $zapretFolderPathDesktop

# Открытие сайта
Start-Process "https://raw.githubusercontent.com/vayulqq/zapret/main/readme.txt"
Write-Log "Открыт сайт 'readme.txt'."

# Пауза
Pause
Write-Log "Скрипт завершен."
