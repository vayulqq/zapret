# Функция для удаления файла
Function Remove-ZipFile {
    param (
        [string]$filePath
    )
    
    # Проверка существования файла
    if (Test-Path -Path $filePath) {
        try {
            # Проверка, не используется ли файл другим процессом
            $fileInUse = $false
            try {
                $file = Get-Item -Path $filePath
                $file.OpenRead() | Out-Null
            } catch {
                $fileInUse = $true
            }

            if ($fileInUse) {
                exit 1
            }

            # Удаление файла
            Remove-Item -Path $filePath -Force
        } catch {
            exit 1
        }
    }
}

# Функция для скачивания файла
Function Download-File {
    param (
        [string]$url,
        [string]$savePath
    )
    try {
        Invoke-WebRequest -Uri $url -OutFile $savePath -ErrorAction Stop
    } catch {
        exit 1
    }
}

# Функция для распаковки ZIP-файла
Function Unpack-Zip {
    param (
        [string]$filePath,
        [string]$extractTo
    )
    try {
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::ExtractToDirectory($filePath, $extractTo)
    } catch {
        exit 1
    }
}

# Основной процесс
try {
    # Параметры
    $url = "https://github.com/vayulqq/zapret/releases/download/qedqedndndn/zapret.zip"
    $userProfilePath = [System.Environment]::GetFolderPath("UserProfile")
    $downloadsPath = Join-Path -Path $userProfilePath -ChildPath "Downloads"
    $desktopPath = Join-Path -Path $userProfilePath -ChildPath "Desktop"
    $zipPath = Join-Path -Path $downloadsPath -ChildPath "zapret.zip"

    # Проверка существования папок
    If (-Not (Test-Path $downloadsPath)) {
        New-Item -ItemType Directory -Path $downloadsPath -Force | Out-Null
    }
    If (-Not (Test-Path $desktopPath)) {
        New-Item -ItemType Directory -Path $desktopPath -Force | Out-Null
    }

    # Скачивание файла
    Download-File -url $url -savePath $zipPath
    
    # Распаковка
    Unpack-Zip -filePath $zipPath -extractTo $desktopPath
    
    # Функция для удаления файла с повторными попытками
Function Remove-ZipFile {
    param (
        [string]$filePath
    )

    # Проверка существования файла
    if (Test-Path -Path $filePath) {
        $attempts = 5  # Количество попыток
        $success = $false

        for ($i = 1; $i -le $attempts; $i++) {
            try {
                # Проверка, не используется ли файл
                $fileInUse = $false
                try {
                    $file = Get-Item -Path $filePath
                    $file.OpenRead() | Out-Null
                } catch {
                    $fileInUse = $true
                }

                # Если файл не используется, удалить его
                if (-not $fileInUse) {
                    Remove-Item -Path $filePath -Force
                    $success = $true
                    break
                }

                # Если файл используется, подождать 1 секунду и попробовать снова
                Start-Sleep -Seconds 1
            } catch {
                # Если ошибка, подождать и попробовать снова
                Start-Sleep -Seconds 1
            }
        }

        if (-not $success) {
            Write-Host "Не удалось удалить файл после $attempts попыток."
        }
    } else {
        Write-Host "Файл не существует: $filePath"
    }
}

# Пример использования функции
$zipPath = "C:\Users\AL\Downloads\zapret.zip"
Remove-ZipFile -filePath $zipPath

